<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xqx.ych.mapper.OrgMajorMapper">
    <resultMap id="BaseResultMap" type="com.xqx.ych.entity.OrgMajor">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="org_id" property="orgId" jdbcType="INTEGER"/>
        <id column="major_id" property="majorId" jdbcType="INTEGER"/>
        <result column="enrollment_quota" property="enrollmentQuota" jdbcType="INTEGER"/>
        <result column="tuition" property="tuition" jdbcType="DECIMAL"/>
        <result column="pre_tuition" property="preTuition" jdbcType="DECIMAL"/>
        <result column="grant" property="grant" jdbcType="DECIMAL"/>
        <result column="is_hot" property="isHot" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, org_id, major_id, enrollment_quota, tuition, pre_tuition, grant, is_hot
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xqx.ych.entity.OrgMajorExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ych_org_major
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.xqx.ych.entity.OrgMajorKey">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from ych_org_major
        where id = #{id,jdbcType=INTEGER}
        and org_id = #{orgId,jdbcType=INTEGER}
        and major_id = #{majorId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.xqx.ych.entity.OrgMajorKey">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from ych_org_major
        where id = #{id,jdbcType=INTEGER}
        and org_id = #{orgId,jdbcType=INTEGER}
        and major_id = #{majorId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xqx.ych.entity.OrgMajorExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from ych_org_major
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xqx.ych.entity.OrgMajor">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into ych_org_major (id, org_id, major_id,
        enrollment_quota, tuition, pre_tuition,
        grant, is_hot)
        values (#{id,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER},
        #{enrollmentQuota,jdbcType=INTEGER}, #{tuition,jdbcType=DECIMAL}, #{preTuition,jdbcType=DECIMAL},
        #{grant,jdbcType=DECIMAL}, #{isHot,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.xqx.ych.entity.OrgMajor">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into ych_org_major
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orgId != null">
                org_id,
            </if>
            <if test="majorId != null">
                major_id,
            </if>
            <if test="enrollmentQuota != null">
                enrollment_quota,
            </if>
            <if test="tuition != null">
                tuition,
            </if>
            <if test="preTuition != null">
                pre_tuition,
            </if>
            <if test="grant != null">
                grant,
            </if>
            <if test="isHot != null">
                is_hot,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orgId != null">
                #{orgId,jdbcType=INTEGER},
            </if>
            <if test="majorId != null">
                #{majorId,jdbcType=INTEGER},
            </if>
            <if test="enrollmentQuota != null">
                #{enrollmentQuota,jdbcType=INTEGER},
            </if>
            <if test="tuition != null">
                #{tuition,jdbcType=DECIMAL},
            </if>
            <if test="preTuition != null">
                #{preTuition,jdbcType=DECIMAL},
            </if>
            <if test="grant != null">
                #{grant,jdbcType=DECIMAL},
            </if>
            <if test="isHot != null">
                #{isHot,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xqx.ych.entity.OrgMajorExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from ych_org_major
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ych_org_major
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orgId != null">
                org_id = #{record.orgId,jdbcType=INTEGER},
            </if>
            <if test="record.majorId != null">
                major_id = #{record.majorId,jdbcType=INTEGER},
            </if>
            <if test="record.enrollmentQuota != null">
                enrollment_quota = #{record.enrollmentQuota,jdbcType=INTEGER},
            </if>
            <if test="record.tuition != null">
                tuition = #{record.tuition,jdbcType=DECIMAL},
            </if>
            <if test="record.preTuition != null">
                pre_tuition = #{record.preTuition,jdbcType=DECIMAL},
            </if>
            <if test="record.grant != null">
                grant = #{record.grant,jdbcType=DECIMAL},
            </if>
            <if test="record.isHot != null">
                is_hot = #{record.isHot,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ych_org_major
        set id = #{record.id,jdbcType=INTEGER},
        org_id = #{record.orgId,jdbcType=INTEGER},
        major_id = #{record.majorId,jdbcType=INTEGER},
        enrollment_quota = #{record.enrollmentQuota,jdbcType=INTEGER},
        tuition = #{record.tuition,jdbcType=DECIMAL},
        pre_tuition = #{record.preTuition,jdbcType=DECIMAL},
        grant = #{record.grant,jdbcType=DECIMAL},
        is_hot = #{record.isHot,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xqx.ych.entity.OrgMajor">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ych_org_major
        <set>
            <if test="enrollmentQuota != null">
                enrollment_quota = #{enrollmentQuota,jdbcType=INTEGER},
            </if>
            <if test="tuition != null">
                tuition = #{tuition,jdbcType=DECIMAL},
            </if>
            <if test="preTuition != null">
                pre_tuition = #{preTuition,jdbcType=DECIMAL},
            </if>
            <if test="grant != null">
                grant = #{grant,jdbcType=DECIMAL},
            </if>
            <if test="isHot != null">
                is_hot = #{isHot,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
        and org_id = #{orgId,jdbcType=INTEGER}
        and major_id = #{majorId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xqx.ych.entity.OrgMajor">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ych_org_major
        set enrollment_quota = #{enrollmentQuota,jdbcType=INTEGER},
        tuition = #{tuition,jdbcType=DECIMAL},
        pre_tuition = #{preTuition,jdbcType=DECIMAL},
        grant = #{grant,jdbcType=DECIMAL},
        is_hot = #{isHot,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
        and org_id = #{orgId,jdbcType=INTEGER}
        and major_id = #{majorId,jdbcType=INTEGER}
    </update>
    <resultMap id="schoolIntroduce" type="SchoolIntroduce">
        <id column="id" property="id"/>
        <result column="name" property="schoolName"/>
        <result column="cover_img" property="coverImg"/>
        <result column="tuition" property="tuition"/>
        <association property="introduce" javaType="Introduce">
            <result column="detail" property="detail"/>
        </association>
    </resultMap>
    <select id="findByIdAndMajor" resultMap="schoolIntroduce">
        select a.id,b.name,b.cover_img,a.tuition,c.detail
        FROM ych_org_major a,ych_organization b,ych_org_introduce c
        where a.org_id=b.id and c.org_id = b.id and b.id=#{id} and a.id=#{majorId}
    </select>
    <resultMap id="majors" type="com.xqx.ych.entity.Major">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="major_code" jdbcType="INTEGER" property="majorCode"/>
        <result column="major_name" jdbcType="VARCHAR" property="majorName"/>
        <result column="major_description" jdbcType="VARCHAR" property="majorDescription"/>
        <result column="major_category_id" jdbcType="INTEGER" property="majorCategoryId"/>
    </resultMap>
    <select id="findByPop" resultMap="majors">
        select b.id, b.major_code, b.major_name, b.major_description, b.major_category_id
        from ych_org_major a, ych_major b
        where a.org_id=b.id and a.is_hot=#{isHot}
    </select>
    <select id="findByOrgId" resultMap="BaseResultMap">
        SELECT id, org_id, major_id, enrollment_quota, tuition, pre_tuition,is_hot
        FROM ych_org_major
        WHERE org_id=#{orgId}
    </select>
    <update id="reduceQuot">
        UPDATE ych_org_major
        SET enrollment_quota =enrollment_quota-#{quot}
        WHERE id =#{id}
    </update>
    <update id="addQuot">
        UPDATE ych_org_major
        SET enrollment_quota =enrollment_quota+#{quot}
        WHERE id =#{id}
    </update>
    <resultMap id="schoolInfo" type="SchoolInfo">
        <id column="id" property="id"/>
        <result column="major_name" property="majorName"/>
        <result column="name" property="schoolName"/>
        <result column="cover_img" property="coverImg"/>
        <result column="adress" property="adress"/>
        <result column="tuition" property="tuition"/>
    </resultMap>
    <select id="selectByMajorId" resultMap="schoolInfo">
        select a.id,c.major_name,a.`name`,a.cover_img,a.adress,b.tuition
        from ych_organization a,ych_org_major b,ych_major c
        where a.id=b.org_id and b.major_id=c.id and b.major_id=#{majorId}
    </select>
    <select id="selectByOrgMajorId" resultMap="BaseResultMap">
        SELECT id,org_id,major_id,enrollment_quota,tuition,pre_tuition,'grant',is_hot
        FROM ych_org_major
        WHERE id = #{id}
    </select>

    <resultMap id="userEnroll" type="UserEnroll">
        <id column="id" property="orgMajorId"/>
        <result column="tuition" property="tuition"/>
        <result column="pre_tuition" property="preTuition"/>
        <result column="grant" property="grant"/>
        <result column="major_name" property="majorName"/>
        <result column="name" property="schoolName"/>
        <result column="actPreTuition" property="actPreTuition"/>
        <result column="count" property="couponCount"/>
        <result column="user_nickname" property="userName"/>
        <result column="cover_img" property="coverImg"/>
    </resultMap>
    <select id="findByOrgMajorId" resultMap="userEnroll">
        SELECT a.id,a.tuition,a.pre_tuition,a.grant,b.major_name,c.cover_img,c.name,(a.pre_tuition-a.grant)actPreTuition
        FROM ych_org_major a,ych_major b,ych_organization c
        WHERE a.org_id=c.id and a.major_id=b.id and a.id=#{orgMajorId}
    </select>
    <select id="findCouponByUserId" resultMap="userEnroll">
        SELECT COUNT(*)count
        FROM ych_coupon
        WHERE user_id=#{userId}
    </select>
    <select id="findUserNameById" resultMap="userEnroll">
        SELECT user_nickname
        FROM ych_user
        WHERE user_id=#{userId}
    </select>
</mapper>